/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define LSIDE  1
#define RSIDE  2
#define NAV  3
#define NUM  4
#define SYS  5
/ {
    behaviors {
        Lht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        Rht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        td_Esc: tap_dance_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance Esc";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp GRAVE>;
        };

        td_J: tap_dance_j {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance J";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&Rht RCTRL J>, <&kp ESC>;
        };
        td_F: tap_dance_f {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance F";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&Lht LCTRL F>, <&kp ESC>;
        };


        td_lr: tap_dance_R_lower_right {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance overload left lower right key";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&lt RSIDE BSPC>, <&kp LBKT>;
        };
        td_ll: tap_dance_L_lower_left {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance overload right lower left key";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&lt LSIDE SPACE>, <&kp N>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LBKT        &kp Q           &kp W           &kp E           &kp R           &kp T                           &kp Y           &kp U           &kp I           &kp O           &kp P           &kp RBKT
&kp TAB         &kp A           &Lht LSFT S     &Lht LALT D     &Lht LCTRL F    &kp G                           &kp H           &td_J           &Rht LALT K     &Rht RSHFT L    &kp SEMI        &kp APOS
&kp ESC         &kp Z           &kp X           &kp C           &Lht LGUI V     &kp B                           &kp N           &Rht RGUI M     &kp COMMA       &kp DOT         &kp FSLH        &kp RETURN
                                                &mo SYS         &mo NAV         &lt RSIDE BSPC                  &lt LSIDE SPACE &mo NUM         &mo SYS
            >;
        };


        left_layer {
            bindings = <
&kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6                          &none           &none           &none           &none           &none           &none
&kp MINUS       &kp N1          &kp N2          &kp N3          &kp N4          &kp N5                          &none           &kp RCTRL       &kp RALT        &kp RSHFT       &none           &none
&none           &none           &none           &none           &kp TAB         &kp GRAVE                       &none           &kp RGUI        &none           &none           &none           &none
                                                &none           &none           &kp DELETE                      &trans          &none           &none
                >;
        };

        right_layer {
            bindings = <
&none           &none           &none           &none           &none           &none                           &kp F7          &kp F8          &kp F9          &kp F10         &kp F11         &kp F12
&none           &none           &kp LSHFT       &kp LALT        &kp LCTRL       &none                           &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp EQUAL
&none           &none           &none           &none           &kp LGUI        &none                           &none           &kp RETURN      &kp BSPC        &kp DELETE      &kp BSLH        &none
                                                &none           &none           &trans                          &none           &none           &none
            >;
        };

        nav_layer {
            bindings = <
&none            &none          &none           &none           &none           &none                           &kp PG_UP       &kp HOME        &kp UP          &kp END         &none           &none
&none            &none          &kp LSHFT       &kp LALT        &kp LCTRL       &none                           &kp PG_DN       &kp LEFT        &kp DOWN        &kp RIGHT       &none           &none
&none            &none          &none           &none           &kp LGUI        &none                           &none           &none           &none           &none           &none           &none
                                                &none           &none           &trans                          &none           &none           &none
            >;
        };

        num_layer {
            bindings = <
&none            &none           &kp KP_N7      &kp KP_N8       &kp KP_N9       &kp KP_PLUS                     &none           &none           &none           &none           &none           &none
&none            &none           &kp KP_N4      &kp KP_N5       &kp KP_N6       &kp KP_MINUS                    &none           &kp RCTRL       &kp RALT        &kp RSHFT       &none           &none
&none            &none           &kp KP_N1      &kp KP_N2       &kp KP_N3       &kp KP_MULTIPLY                 &none           &kp RGUI        &none           &none           &none           &none
                                                &kp KP_DOT      &kp KP_N0       &kp KP_DIVIDE                   &trans          &none           &none
            >;
        };

        sys_layer {
            bindings = <
&sys_reset      &none           &none           &none           &kp C_VOL_UP    &none                           &none           &kp C_BRI_UP    &none           &none           &none           &sys_reset
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &kp C_VOL_DN    &none                           &none           &kp C_BRI_DN    &none           &none           &none           &none
&none           &none           &none           &none           &none           &bootloader                     &bootloader     &none           &none           &none           &none           &none
                                                &trans          &none           &none                           &none           &none           &trans
            >;
        };

    };
};/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define LSIDE  1
#define RSIDE  2
#define NAV  3
#define NUM  4
#define SYS  5
/ {
    behaviors {
        Lht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        Rht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        td_Esc: tap_dance_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance Esc";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp GRAVE>;
        };

        td_J: tap_dance_j {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance J";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&Rht RCTRL J>, <&kp ESC>;
        };
        td_F: tap_dance_f {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance F";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&Lht LCTRL F>, <&kp ESC>;
        };


        td_lr: tap_dance_R_lower_right {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance overload left lower right key";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&lt RSIDE BSPC>, <&kp LBKT>;
        };
        td_ll: tap_dance_L_lower_left {
            compatible = "zmk,behavior-tap-dance";
            label = "tap dance overload right lower left key";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&lt LSIDE SPACE>, <&kp N>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp MINUS       &kp N1          &kp N2          &kp N3          &kp N4          &kp N5                          &kp N6          &kp N7          &kp N8          &kp N9          &kp N10         &kp EQUAL
&kp LBKT        &kp Q           &kp W           &kp E           &kp R           &kp T                           &kp Y           &kp U           &kp I           &kp O           &kp P           &kp RBKT
&kp TAB         &kp A           &Lht LSFT S     &Lht LALT D     &Lht LCTRL F    &kp G                           &kp H           &td_J           &Rht LALT K     &Rht RSHFT L    &kp SEMI        &kp APOS
&kp ESC         &kp Z           &kp X           &kp C           &Lht LGUI V     &kp B                           &kp N           &Rht RGUI M     &kp COMMA       &kp DOT         &kp FSLH        &kp RETURN
                                                &mo SYS         &mo NAV         &lt RSIDE BSPC                  &lt LSIDE SPACE &mo NUM         &mo SYS
            >;
        };


        left_layer {
            bindings = <
&none           &none           &none           &none           &none           &none                           &none           &none           &none           &none           &none           &none
&kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6                          &none           &none           &none           &none           &none           &none
&kp MINUS       &kp N1          &kp N2          &kp N3          &kp N4          &kp N5                          &none           &kp RCTRL       &kp RALT        &kp RSHFT       &none           &none
&none           &none           &none           &none           &kp TAB         &kp GRAVE                       &none           &kp RGUI        &none           &none           &none           &none
                                                &none           &none           &kp DELETE                      &trans          &none           &none
                >;
        };

        right_layer {
            bindings = <
&none           &none           &none           &none           &none           &none                           &none           &none           &none           &none           &none           &none
&none           &none           &none           &none           &none           &none                           &kp F7          &kp F8          &kp F9          &kp F10         &kp F11         &kp F12
&none           &none           &kp LSHFT       &kp LALT        &kp LCTRL       &none                           &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp EQUAL
&none           &none           &none           &none           &kp LGUI        &none                           &none           &kp RETURN      &kp BSPC        &kp DELETE      &kp BSLH        &none
                                                &none           &none           &trans                          &none           &none           &none
            >;
        };

        nav_layer {
            bindings = <
&none            &none          &none           &none           &none           &none                           &none           &none           &none           &none           &none           &none
&none            &none          &none           &none           &none           &none                           &kp PG_UP       &kp HOME        &kp UP          &kp END         &none           &none
&none            &none          &kp LSHFT       &kp LALT        &kp LCTRL       &none                           &kp PG_DN       &kp LEFT        &kp DOWN        &kp RIGHT       &none           &none
&none            &none          &none           &none           &kp LGUI        &none                           &none           &none           &none           &none           &none           &none
                                                &none           &none           &trans                          &none           &none           &none
            >;
        };

        num_layer {
            bindings = <
&none            &none          &none           &none           &none           &none                           &none           &none           &none           &none           &none           &none
&none            &none           &kp KP_N7      &kp KP_N8       &kp KP_N9       &kp KP_PLUS                     &none           &none           &none           &none           &none           &none
&none            &none           &kp KP_N4      &kp KP_N5       &kp KP_N6       &kp KP_MINUS                    &none           &kp RCTRL       &kp RALT        &kp RSHFT       &none           &none
&none            &none           &kp KP_N1      &kp KP_N2       &kp KP_N3       &kp KP_MULTIPLY                 &none           &kp RGUI        &none           &none           &none           &none
                                                &kp KP_DOT      &kp KP_N0       &kp KP_DIVIDE                   &trans          &none           &none
            >;
        };

        sys_layer {
            bindings = <
&none           &none          &none           &none           &none           &none                           &none           &none           &none           &none           &none           &none
&sys_reset      &none           &none           &none           &kp C_VOL_UP    &none                           &none           &kp C_BRI_UP    &none           &none           &none           &sys_reset
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &kp C_VOL_DN    &none                           &none           &kp C_BRI_DN    &none           &none           &none           &none
&none           &none           &none           &none           &none           &bootloader                     &bootloader     &none           &none           &none           &none           &none
                                                &trans          &none           &none                           &none           &none           &trans
            >;
        };

    };
};